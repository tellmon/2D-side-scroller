Embedded Justification Summary (for your notes/slide)


Encapsulation


    This helps with security and modularity in the project.

Composition & Aggregation

    These objects are essential parts of the game loop.

    Each one handles its own responsibilities but works together.

    This shows you can break down a big task into manageable, reusable parts â€” like building with LEGO blocks.



ðŸ”¸ Inheritance

   ðŸ”¸ Encapsulation

    All key data (like health, money, speed, etc.) are private and accessed via methods.

    Encapsulation allows your classes to be portable (you can reuse them in another project easilyâ€”just plug and play).






ðŸ”¸ Interface: GameInterface

    Acts as a way to decouple your drawing and movement logic from the actual game logic. This is useful for scalability and testing.
